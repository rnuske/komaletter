[{"path":"https://rnuske.github.io/komaletter/articles/intro.html","id":"usage","dir":"Articles","previous_headings":"","what":"Usage","title":"Introduction to komaletter","text":"easy way start new komaletter ask skeleton document RStudio via New File > R Markdown > Template > komaletter rmarkdown::draft(\"myletter.Rmd\", template=\"pdf\", package=\"komaletter\"). turn markown beautiful PDF use Knit Button RStudio rmarkdown::render(\"myletter.Rmd\"). skeleton creates simple letter starting point writing. Several formatting defaults font, fontsize, indentation use. following figure shows complete source left rendered PDF right.","code":""},{"path":"https://rnuske.github.io/komaletter/articles/intro.html","id":"letter-settings","dir":"Articles","previous_headings":"","what":"Letter Settings","title":"Introduction to komaletter","text":"Various aspects letter can customized via following variables R Markdown document metadata (aka YAML header). Although rarely makes sense write letter without sender recipient, komaletter can constructed merely specifying output format. variables optional. commonly used variables. variables understood rmarkdown’s pdf_document format may used addition komaletter variables defined following table customize letter. variables change placement elements letter (address, letter head, text). aspects refer Letter Layouts. komaletter variables.","code":""},{"path":"https://rnuske.github.io/komaletter/articles/intro.html","id":"letter-layouts","dir":"Articles","previous_headings":"","what":"Letter Layouts","title":"Introduction to komaletter","text":"layout letters defined -called Letter Class Option files. KOMA-Script provides number standard styles (see following table). package comes default style defined maintainersDelight.lco. Users may well define layout. Styles can selected via variable lco YAML header rmarkdown document. Provide either name one standard styles listed path self defined style without file extension. LaTeX can find lco file, uses KOMA-Script’s default: DIN. Common errors besides typos paths extension, underscores paths mangeled pandoc. Custom lco’s may constructed either based one standard lco-files defining aspects position recpients address, foldmarks etc.. comprehensive description refer KOMA-Script Guide. KOMA-Script’s standard LCOs.","code":""},{"path":"https://rnuske.github.io/komaletter/articles/intro.html","id":"internationalisation","dir":"Articles","previous_headings":"","what":"Internationalisation","title":"Introduction to komaletter","text":"easy write letters non English languages. necessary language layout settings can achieved YAML variables lang lco. komaletter passes LaTeX template nicely internationalized KOMA-Script letter class. language can specified via two letter code en, de, fr, es. want precise adding country en-US American English de-CH Swiss German. KOMA-Script generates e.g. date according language country conventions. Beware need additional LaTeX language packages choose non English language. Make sure necessary LaTeX language packs, .e. texlive-lang-german German letter (lang: de) present write LaTeX Documents language. letter layout fitting local window envelope style can select using YAML variable lco. various letter layouts discussed previous section. french letter layout window envelope style DL selected via lco: NF.","code":""},{"path":"https://rnuske.github.io/komaletter/articles/intro.html","id":"about-printing","dir":"Articles","previous_headings":"","what":"About Printing","title":"Introduction to komaletter","text":"PDF viewers realize document already blank margin scale ‘fit page’ printing. generally results smaller fonts, overly large margins, broken layout importantly misplaced address. worst case, parts address visible window envelope. komaletter’s default layout signals PDF viewer print document actual size. Unfortunately, many PDF viewers heed hint. Thus, printing document, check document shrunk ‘fit page’. document must printed actual size / 100% positions elements correct (possible Okular < 1.7 (Applications 19.04), e.g. part Kubuntu 18.04).","code":""},{"path":"https://rnuske.github.io/komaletter/articles/intro.html","id":"hints","dir":"Articles","previous_headings":"","what":"Hints","title":"Introduction to komaletter","text":"default papersize KOMA-Script class scrlttr2 DIN A4. want create US style letter eg. using lco: UScommercial9, remember set papersize letter. return-address long, might fit one line backaddress address window. letter layout coming package komaletter tries hard craft pretty two-line version. option using YAML parameter return-short provide alternative one line address used address window. return-short can list return-address just one line text. See also vignette letter_example4. Since figure environment defined classes letter scrlltr2, pandoc told wrap image \\begin{figure}...\\end{figure}. can achieved ending line backslash: just want regular inline image, just make sure thing paragraph. One way insert nonbreaking space image:","code":"![Alt text](image.png)\\ ![This image won't be a figure](/url/of/image.png)\\"},{"path":"https://rnuske.github.io/komaletter/articles/parameterized_letter.html","id":"tldr-example","dir":"Articles","previous_headings":"","what":"TLDR: Example","title":"Parameterized Letters for Mass Mailings","text":"Template letter (saved template_letter.Rmd): Collect data recipients data.frame recipients: Combine template letter recipients’ data create lots PDFs:","code":"--- author: Max Mustermann return-address: [Musterstr. 12, 34567 Musterstadt] signature: Max  params:    name: DefaultNickname   address: \"[Default Name, 123 Default St, Default Town]\"   gift: DefaultGift  output: komaletter::komaletter --- --- address: `r params$address` opening: `r paste0('Dear ', params$name, ',')` closing: \"Yours truly,\" ---  thank you very much for the beautiful `r params$gift`. It was a pleasure to have you. recipients <- data.frame(name=c(\"Bob\", \"Megan\", \"Alex\"),                          gift=c(\"painting\", \"candlestick\", \"book\"),                          address=c(\"[Robert Pitts, 5543 Aliquet St, Fort Dodge GA 20783]\",                                    \"[Megan Smith, 4156 Tincidunt Ave, Green Bay IN 19759]\",                                    \"[Alexander Fitzgerald, 869 Laurel Ave, St Paul MN 55104]\"),                          stringsAsFactors=FALSE) for(i in 1:nrow(recipients)){   rmarkdown::render(\"template_letter.Rmd\",                      params=list(name=recipients[i, \"name\"],                                  gift=recipients[i, \"gift\"],                                  address=recipients[i, \"address\"]),                     output_file=paste0(\"letter_\", recipients[i, 'name'], \".pdf\")) }"},{"path":"https://rnuske.github.io/komaletter/articles/parameterized_letter.html","id":"basics-of-mail-merge-with-komaletter","dir":"Articles","previous_headings":"","what":"Basics of Mail Merge with komaletter","title":"Parameterized Letters for Mass Mailings","text":"personalize letters mass mailings, can include one placeholders (parameters) komaletter. parameters need declared first put use later document. rendering letters, can assign various values parameters.","code":""},{"path":"https://rnuske.github.io/komaletter/articles/parameterized_letter.html","id":"declaring-parameters","dir":"Articles","previous_headings":"Basics of Mail Merge with komaletter","what":"Declaring Parameters","title":"Parameterized Letters for Mass Mailings","text":"Parameters declared YAML metadata header using params field. can specify one parameters new line. default values (: John & candlestick) given parameter declaration, used parameter provided rendering.","code":"--- params:   name: John   gift: candlestick  output: komaletter::komaletter ---"},{"path":"https://rnuske.github.io/komaletter/articles/parameterized_letter.html","id":"using-parameters","dir":"Articles","previous_headings":"Basics of Mail Merge with komaletter","what":"Using Parameters","title":"Parameterized Letters for Mass Mailings","text":"declared parameters automatically made available within knit environment components read-list params. example, values parameters can accessed following R Code: value parameter shall used YAML metadata header, parameter must declared previously. Since backtick ` reserved character YAML, inline R Code snippet wrapped quotes.","code":"params$name params$gift --- params:   name: John   gift: candlestick    subject: \"`r params$gift`\"  output: komaletter::komaletter ---"},{"path":"https://rnuske.github.io/komaletter/articles/parameterized_letter.html","id":"setting-parameter-values","dir":"Articles","previous_headings":"Basics of Mail Merge with komaletter","what":"Setting Parameter values","title":"Parameterized Letters for Mass Mailings","text":"set parameter values, can add params argument rmarkdown::render. parameter get value, default defined parameter declaration used (eg. John, candlestick).","code":"rmarkdown::render(\"example.Rmd\", params=list(name=\"Jane\"))"},{"path":"https://rnuske.github.io/komaletter/articles/parameterized_letter.html","id":"challenges-of-mail-merge-with-komaletter","dir":"Articles","previous_headings":"","what":"Challenges of Mail Merge with komaletter","title":"Parameterized Letters for Mass Mailings","text":"R Markdown thus komaletter combines R Code, YAML Markdown. R Markdown documents processed knitr pure YAML Markdown turn send pandoc conversion final document type (pdf case). parametrized letter obey restrictions parts involved. common personalization address recipient salutation opening. komaletter expects address YAML sequence within YAML metadata header. YAML sequences can written flow block style. need quotation marks protect square brackets enable escape code \\n parameter declaration YAML metadata. Since address letter opening defined YAML metadata. corresponding parameters must declared afterwards put use within YAML metadata. Parameter values accessed R Code. YAML metadata header means inline code snippets `r expression`. Since backticks ` ‘reserved indicators’ YAML, code snippet usually needs wrapped quotes. result quoted R expression \"`r expression`\" value enclosed double quotes, .e. \"value\", harmful result R type character corresponding YAML scalar. YAML scalars can enclosed single double quotes wrapped . everything quotes scalar YAML. Consequently means expressions supposed supply address thus YAML sequence, must enclosed quotes! poses main problem since learned inline code snippets need enclosed quotes main YAML metadata header.","code":"--- params:   # scalar:   name: John Doe   # flow style sequence:   address_flow: \"[FirstName LastName, 123 Main St, Anytown]\"   # block style sequence:   address_block: \"\\n  - FirstName LastName\\n  - 123 Main St\\n  - Anytown\" --- --- params:   name: John Doe    opening: \"`r paste0('Dear ', params$name, ',')`\"  output: komaletter::komaletter ---"},{"path":"https://rnuske.github.io/komaletter/articles/parameterized_letter.html","id":"solution","dir":"Articles","previous_headings":"","what":"Solution","title":"Parameterized Letters for Mass Mailings","text":"rather hack found bycatch stackoverflow circumventing issue moment. explained , address YAML sequence sequences can enclosed quotes. access parameter main YAML metadata header inline R Code snippet wrapped quotes R expressions wrapped quotes evaluate value enclosed quotes. Mysteriously, rule backticks must enclosed quotes enforced second YAML metadata block. can use two metadata blocks Pandoc combines YAML metadata blocks converting .md file final document. second metadata block inline R Code snippet can written without quotes resulting correctly formatted YAML sequence. template letter can called various values","code":"--- author: Max Mustermann return-address: [Musterstr. 12, 34567 Musterstadt] signature: Max  params:    name: Johnny   address: \"[John Doe, 123 Main St, Anytown]\"   gift: flowers  output: komaletter::komaletter --- --- address: `r params$address` opening: `r paste0('Dear ', params$name, ',')` closing: \"Yours truly,\" ---  thank you very much for the beautiful `r params$gift`. It was a pleasure to have you. recipients <- data.frame(name=c(\"Bob\", \"Megan\", \"Alex\"),                          gift=c(\"painting\", \"candlestick\", \"book\"),                          address=c(\"[Robert Pitts, 5543 Aliquet St, Fort Dodge GA 20783]\",                                    \"[Megan Smith, 4156 Tincidunt Ave, Green Bay IN 19759]\",                                    \"[Alexander Fitzgerald, 869 Laurel Ave, St Paul MN 55104]\"),                          stringsAsFactors=FALSE)   for(i in 1:nrow(recipients)){   rmarkdown::render(\"template_letter.Rmd\",                      params=list(name=recipients[i, \"name\"],                                  gift=recipients[i, \"gift\"],                                  address=recipients[i, \"address\"]),                     output_file=paste0(\"letter_\", recipients[i, 'name'], \".pdf\")) }"},{"path":"https://rnuske.github.io/komaletter/articles/parameterized_letter.html","id":"further-information","dir":"Articles","previous_headings":"","what":"Further Information","title":"Parameterized Letters for Mass Mailings","text":"Chapter “Parametrized Reports” book “R Markdown: Definitive Guide” Lesson 6 “Parameters” “Get Started”-Course RStudio’s R Markdown website YAML Reference card (Scalar indicators, Escape codes, Misc. Indicators reserved indicators) YAML Specification (Syntax, Indicator Characters: reserved characters, Escape Sequences, Scalar Styles, Sequence Styles) YAML block sequence YAML flow sequence","code":""},{"path":"https://rnuske.github.io/komaletter/articles/parameterized_letter.html","id":"hints","dir":"Articles","previous_headings":"","what":"Hints","title":"Parameterized Letters for Mass Mailings","text":"Since parameters evaluated roughly speaking document knitting (conversion .Rmd .md), helpful look intermediate .md files hunt issues parameterized letters. Since komaletter based rmarkdown’s output format pdf_document, can use argument keep_md obtain intermediary .md file (rmarkdown >= 1.14). Previously one resort rmarkdown::render(..., clean=FALSE) cause intermediate .md files remain available.","code":""},{"path":"https://rnuske.github.io/komaletter/articles/pkgdown_letter_example0.html","id":"rmarkdown-of-letter","dir":"Articles","previous_headings":"","what":"RMarkdown of Letter","title":"Example 0","text":"","code":"--- author: Max Mustermann return-address:   - Musterstr. 12   - 34567 Musterstadt address:   - Robert Nuske   - Hauptstr. 31   - 30167 Hannover   - Germany  subject: Some nonsensical Subject opening: Dear Robert, closing: Best regards, signature: Max Mustermann  output: komaletter::komaletter  ---  Lorem ipsum dolor sit amet, consectetur adipiscing elit. Proin mollis dolor vitae tristique eleifend. Quisque non ipsum sit amet velit malesuada consectetur. Praesent vel facilisis leo. Sed facilisis varius orci, ut aliquam lorem malesuada in. Morbi nec purus at nisi fringilla varius non ut dui. Pellentesque bibendum sapien velit. Nulla purus justo, congue eget enim a, elementum sollicitudin eros. Cras porta augue ligula, vel adipiscing odio ullamcorper eu. In tincidunt nisi sit amet tincidunt tincidunt. Maecenas elementum neque eget dolor egestas fringilla.  Vestibulum id sodales lectus, sed scelerisque quam. Nullam auctor mi et feugiat commodo. Duis interdum imperdiet nulla, vitae bibendum eros placerat non. Cras ornare, risus in faucibus malesuada, libero sem fringilla quam, ut luctus enim sapien eget dolor."},{"path":"https://rnuske.github.io/komaletter/articles/pkgdown_letter_example0.html","id":"resulting-pdf-letter","dir":"Articles","previous_headings":"","what":"Resulting PDF Letter","title":"Example 0","text":"PDF rendered RMarkdown document via rmarkdown::render() RStudio Knit button.","code":""},{"path":"https://rnuske.github.io/komaletter/articles/pkgdown_letter_example1.html","id":"rmarkdown-of-letter","dir":"Articles","previous_headings":"","what":"RMarkdown of Letter","title":"Example 1","text":"","code":"--- author: Max Mustermann return-address:    - Musterstr. 12   - 34567 Musterstadt return-phone: +49-511-21311212 return-email: max@musterman.tld  address:   - An Herrn   - Robert Nuske   - Hauptstr. 31   - 30167 Hannover  lco: \"`r system.file('rmarkdown', 'templates', 'pdf', 'resources', 'maintainersDelight', package='komaletter')`\" colorlinks: true  date: 2020-12-31 place: Musterstadt  subject: Some Customizations opening: Hi Robert, closing: Cheers, signature: \"\\\\includegraphics{signature}\" signature-before: \"0.5\\\\baselineskip\" cc: Dirk Eddelbuettel ps: P.S. Beware of the copy editor!  output: komaletter::komaletter  ---  far far away, behind the word mountains, far from the countries  Vokalia and Consonantia, there live the blind texts. Separated they  live in Bookmarksgrove right at the coast of the Semantics, a large  language ocean. A small river named Duden flows by their place and  supplies it with the necessary regelialia. It is a paradisematic  country, in which roasted parts of sentences [fly into your mouth](www.example.tld).  Even the all-powerful Pointing has no control about the blind texts it is an almost unorthographic life One day however a small line of blind text by the name of Lorem Ipsum decided to leave for the far World of Grammar. The Big Oxmox advised her not to do so, because there were thousands of bad Commas, wild Question Marks and devious Semikoli, but the Little Blind Text didn't listen.  She packed her seven versalia, put her initial into the belt and made herself on the way. When she reached the first hills of the Italic Mountains, she had a last view back on the skyline of her hometown Bookmarksgrove, the headline of Alphabet Village and the subline of her own road, the Line Lane. Pityful a rethoric question ran over her cheek, then she continued her way. On her way she met a copy. The copy warned the Little Blind Text, that where it came from it would have been rewritten a thousand times."},{"path":"https://rnuske.github.io/komaletter/articles/pkgdown_letter_example1.html","id":"resulting-pdf-letter","dir":"Articles","previous_headings":"","what":"Resulting PDF Letter","title":"Example 1","text":"PDF rendered RMarkdown document via rmarkdown::render() RStudio Knit button.","code":""},{"path":"https://rnuske.github.io/komaletter/articles/pkgdown_letter_example2.html","id":"rmarkdown-of-letter","dir":"Articles","previous_headings":"","what":"RMarkdown of Letter","title":"Example 2","text":"","code":"--- author: Max Mustermann return-address:    - Musterstr. 12   - 34567 Musterstadt address:   - Robert Nuske   - Hauptstr. 31   - 30167 Hannover   - Germany    subject: Letter in KOMA-Script's US Style opening: Dear Robert, closing: Best regards, signature: Max Mustermann  lco: UScommercial9 papersize: letter  inline-links: true  output: komaletter::komaletter  --- Perhaps a re-engineering of your current world view will re-energize your online nomenclature to enable a new holistic interactive enterprise internet communication solution. Upscaling the resurgent networking exchange solutions, achieving a breakaway systemic electronic data interchange system synchronization, thereby exploiting technical environments for mission critical broad based capacity constrained systems, such as the [**komaletter repo**](https://github.com/rnuske/komaletter).  Fundamentally transforming well designed actionable information whose semantic content is virtually null. To more fully clarify the current exchange, a few aggregate issues will require thinking outside the box."},{"path":"https://rnuske.github.io/komaletter/articles/pkgdown_letter_example2.html","id":"resulting-pdf-letter","dir":"Articles","previous_headings":"","what":"Resulting PDF Letter","title":"Example 2","text":"PDF rendered RMarkdown document via rmarkdown::render() RStudio Knit button.","code":""},{"path":"https://rnuske.github.io/komaletter/articles/pkgdown_letter_example3.html","id":"rmarkdown-of-letter","dir":"Articles","previous_headings":"","what":"RMarkdown of Letter","title":"Example 3","text":"","code":"--- author: Dr. Robert Nuske return-address:    - Hauptstr. 31   - 30167 Hannover address:   - Änderungsamt   - Behördenstr. 24   - 10557 Bärlin    subject: Brief an eine Verwaltung opening: Sehr geehrte Damen und Herren, closing: Mit freundlichen Grüßen signature: \"\\\\includegraphics{signature}\" signature-before: 2mm  yourref: IK 08/15 - 2 yourmail: 23.02.2018 myref: Äamt 2018-02 date: 01.04.2018  lang: de papersize: a4  output: komaletter::komaletter  ---  überall dieselbe alte Leier. Das Layout ist fertig, der Text lässt auf sich warten. Damit das Layout nun nicht nackt im Raume steht und sich klein und leer vorkommt, springe ich ein: der Blindtext. Genau zu diesem Zwecke erschaffen, immer im Schatten meines großen Bruders \"Lorem Ipsum\", freue ich mich jedes Mal, wenn Sie ein paar Zeilen  lesen.   Und weil Sie nun schon die Güte haben, mich ein paar weitere Sätze lang zu begleiten, möchte ich diese Gelegenheit nutzen, Ihnen nicht nur als Lückenfüller zu dienen, sondern auf etwas hinzuweisen, das es ebenso verdient wahrgenommen zu werden: Webstandards nämlich. Sehen Sie, Webstandards sind das Regelwerk, auf dem Webseiten aufbauen. So gibt es Regeln für HTML, CSS, JavaScript oder auch XML.  Diese Standards sorgen dafür, dass alle Beteiligten aus einer Webseite den größten Nutzen ziehen. Im Gegensatz zu früheren Webseiten müssen wir zum Beispiel nicht mehr zwei verschiedene Webseiten für den Internet Explorer und einen anderen Browser programmieren. Es reicht eine Seite, die - richtig angelegt - sowohl auf verschiedenen Browsern im Netz funktioniert, aber ebenso gut für den Ausdruck oder die  Darstellung auf einem Handy geeignet ist. Wohlgemerkt: Eine Seite für  alle Formate."},{"path":"https://rnuske.github.io/komaletter/articles/pkgdown_letter_example3.html","id":"resulting-pdf-letter","dir":"Articles","previous_headings":"","what":"Resulting PDF Letter","title":"Example 3","text":"PDF rendered RMarkdown document via rmarkdown::render() RStudio Knit button.","code":""},{"path":"https://rnuske.github.io/komaletter/articles/pkgdown_letter_example4.html","id":"rmarkdown-of-letter","dir":"Articles","previous_headings":"","what":"RMarkdown of Letter","title":"Example 4","text":"","code":"--- author: Karl-Heinz Müller-Lüdenscheidt return-address:    - Vicco-von-Bülow-Str. 3   - 10623 Berlin-Charlottenburg return-short: Müller-Lüdenscheidt, Vicco-von-Bülow-Str. 3, 10623 Berlin  address:   - Dr. Klöbner   - Musterstr. 12   - 34567 Musterstadt    subject: Usage of YAML parameter `return-short` opening: Dear Dr. Klöbner, closing: Sincerely, signature: Karl-Heinz Müller-Lüdenscheidt  output: komaletter::komaletter  ---  this letter shows the usage of the YAML parameter `return-short`. The parameter has been created to allow for a different possibly shorter address to fit in  the window. If `return-address` and `return-short` are used, the probably longer `return-address` is shown in the letterhead and the hopefully one line  `return-short` in the address window. Usually (without using `return-short`) the address in the window is assembled from the `author` and the `return-address`  and therefore identical to the address in the letterhead.   The `return-short` must contain the entire return address shown in the window including the author name, since the author is not prepended. The YAML parameter  `return-short` maybe either a one line text variable or a YAML sequence also  known as list.   ``` return-short: Müller-Lüdenscheidt, Vicco-von-Bülow-Str. 3, 10623 Berlin  return-short:   - Müller-Lüdenscheidt   - Vicco-von-Bülow-Str. 3   - 10623 Berlin ```  In the case of the one line text form the writer specifies the address  separator, a comma in the above example. If `return-short` is given as a  sequence / list, the address separator is defined in the relevant layout  (`lco`-file)."},{"path":"https://rnuske.github.io/komaletter/articles/pkgdown_letter_example4.html","id":"resulting-pdf-letter","dir":"Articles","previous_headings":"","what":"Resulting PDF Letter","title":"Example 4","text":"PDF rendered RMarkdown document via rmarkdown::render() RStudio Knit button.","code":""},{"path":"https://rnuske.github.io/komaletter/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Robert Nuske. Author, maintainer. Dirk Eddelbuettel. Author. Aaron Wolen. Author.","code":""},{"path":"https://rnuske.github.io/komaletter/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Nuske R, Eddelbuettel D, Wolen (2022). komaletter: Simply Beautiful PDF Letters Markdown. https://rnuske.github.io/komaletter/, https://github.com/rnuske/komaletter.","code":"@Manual{,   title = {komaletter: Simply Beautiful PDF Letters from Markdown},   author = {Robert Nuske and Dirk Eddelbuettel and Aaron Wolen},   year = {2022},   note = {https://rnuske.github.io/komaletter/, https://github.com/rnuske/komaletter}, }"},{"path":[]},{"path":"https://rnuske.github.io/komaletter/index.html","id":"motivation","dir":"","previous_headings":"komaletter: Simply Beautiful PDF Letters from Markdown","what":"Motivation","title":"Simply Beautiful PDF Letters from Markdown","text":"Simple letters tend look much alike. either determined standard eg. window envelope style writer’s preferences. Since layout fixed, letters can written perfectly R Markdown. KOMA-Script LaTeX Bundle provides layouts many common window envelope types (German, US, French, Japanese, …) possibility define layout. komaletter package also provides ’s default letter layout loosely based DIN 5008B. package adaptation linl package international writers. linl based pandoc-letter template extends use R via rmarkdown package.","code":""},{"path":[]},{"path":"https://rnuske.github.io/komaletter/index.html","id":"skeleton","dir":"","previous_headings":"komaletter: Simply Beautiful PDF Letters from Markdown > Examples","what":"Skeleton","title":"Simply Beautiful PDF Letters from Markdown","text":"skeleton provided komaletter creates simple letter starting point writing. Several formatting defaults font, fontsize, indentation use. See vignette('intro', 'komaletter') help(komaletter) complete list default values. following figure shows rmarkdown source left rendered pdf right.","code":""},{"path":"https://rnuske.github.io/komaletter/index.html","id":"vignette","dir":"","previous_headings":"komaletter: Simply Beautiful PDF Letters from Markdown > Examples","what":"Vignette","title":"Simply Beautiful PDF Letters from Markdown","text":"vignette examples bit detailed s demonstrate, example, include signature, choose different layout make format settings. driven simple settings YAML header shown following figure left.","code":""},{"path":"https://rnuske.github.io/komaletter/index.html","id":"usage","dir":"","previous_headings":"komaletter: Simply Beautiful PDF Letters from Markdown","what":"Usage","title":"Simply Beautiful PDF Letters from Markdown","text":"start new letter can take advantage komaletter skeleton via rmarkdown::draft() RStudio menu: File > New File > R Markdown… > Template > komaletter (PDF). finished writing letter RMarkdown document can rendered PDF via rmarkdown::render() RStudio Knit button.","code":"# start a new letter using the provided skeleton rmarkdown::draft(\"my_letter.Rmd\", template=\"pdf\", package=\"komaletter\", edit=FALSE)  # change my_letter.Rmd to your liking  # turn Rmd into a beautiful PDF rmarkdown::render(\"my_letter.Rmd\")"},{"path":"https://rnuske.github.io/komaletter/index.html","id":"about-printing","dir":"","previous_headings":"komaletter: Simply Beautiful PDF Letters from Markdown","what":"About Printing","title":"Simply Beautiful PDF Letters from Markdown","text":"PDF viewers realize document already blank margin scale ‘fit page’ printing. generally results smaller fonts, overly large margins, broken layout importantly misplaced address. worst case, parts address visible window envelope. komaletter’s default layout signals PDF viewer print document actual size. Unfortunately, many PDF viewers heed hint. Thus, printing document, check document shrunk ‘fit page’. document must printed actual size / 100% positions elements correct.","code":""},{"path":"https://rnuske.github.io/komaletter/index.html","id":"installation","dir":"","previous_headings":"komaletter: Simply Beautiful PDF Letters from Markdown","what":"Installation","title":"Simply Beautiful PDF Letters from Markdown","text":"can install released version komaletter CRAN development version GitHub using package remotes","code":"install.packages(\"komaletter\") remotes::install_github(\"rnuske/komaletter\")"},{"path":"https://rnuske.github.io/komaletter/index.html","id":"requirements","dir":"","previous_headings":"komaletter: Simply Beautiful PDF Letters from Markdown","what":"Requirements","title":"Simply Beautiful PDF Letters from Markdown","text":"Beyond R package dependency rmarkdown, working pandoc binary LaTeX distribution including KOMA-Script needed. RStudio installs ’s copy pandoc, otherwise needed OS. LaTeX look texlive included Linux distributions. KOMA-Script part bare bone LaTeX distributions. Something like sudo apt install pandoc pandoc-citeproc texlive provide everything needed Debian/Ubuntu. get working LaTeX Windows recommended use service R package tinytex. plan write non-english letters, make sure necessary language packs, .e. texlive-lang-german.","code":""},{"path":"https://rnuske.github.io/komaletter/index.html","id":"authors","dir":"","previous_headings":"komaletter: Simply Beautiful PDF Letters from Markdown","what":"Authors","title":"Simply Beautiful PDF Letters from Markdown","text":"Robert Nuske, Dirk Eddelbuettel Aaron Wolen.","code":""},{"path":"https://rnuske.github.io/komaletter/index.html","id":"license","dir":"","previous_headings":"komaletter: Simply Beautiful PDF Letters from Markdown","what":"License","title":"Simply Beautiful PDF Letters from Markdown","text":"GPL-3 package, work pandoc-letter, well underlying Pandoc template.","code":""},{"path":"https://rnuske.github.io/komaletter/reference/komaletter.html","id":null,"dir":"Reference","previous_headings":"","what":"KOMA-Script LaTeX Letter Format — komaletter","title":"KOMA-Script LaTeX Letter Format — komaletter","text":"format LaTeX letters via R Markdown using KOMA-Script class 'scrlttr2'. provides layouts many different window envelope types (German, US, French, Japanese, ...) lets define customized layouts.","code":""},{"path":"https://rnuske.github.io/komaletter/reference/komaletter.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"KOMA-Script LaTeX Letter Format — komaletter","text":"","code":"komaletter(..., keep_tex = FALSE)"},{"path":"https://rnuske.github.io/komaletter/reference/komaletter.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"KOMA-Script LaTeX Letter Format — komaletter","text":"... Additional arguments rmarkdown::pdf_document() keep_tex boolean toggle select whether intermediate LaTeX files kept, defaults FALSE","code":""},{"path":"https://rnuske.github.io/komaletter/reference/komaletter.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"KOMA-Script LaTeX Letter Format — komaletter","text":"R Markdown output pass rmarkdown::render()","code":""},{"path":"https://rnuske.github.io/komaletter/reference/komaletter.html","id":"letter-features","dir":"Reference","previous_headings":"","what":"Letter features","title":"KOMA-Script LaTeX Letter Format — komaletter","text":"Various aspects letter can customized via following variables R Markdown document metadata (aka YAML header). Although rarely makes sense write letter without sender recipient, komaletter can constructed merely specifying output format. variables optional. commonly used variables: variables understood rmarkdown's pdf_document format may used addition komaletter variables defined following table customize letter. modifications layout please refer vignette \"Introduction komaletter\". variables defined komaletter: source example letter vignettes show several options use.","code":""},{"path":"https://rnuske.github.io/komaletter/reference/komaletter.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"KOMA-Script LaTeX Letter Format — komaletter","text":"JJ Allaire, Yihui Xie, Jonathan McPherson et al. (2020). rmarkdown: Dynamic Documents R. R package version 2.6. https://cran.r-project.org/package=rmarkdown Aaron Wolen Andrew Dunning (2017). pandoc-letter. GitHub Repository. https://github.com/aaronwolen/pandoc-letter Markus Kohm (2020). KOMA-Script: versatile LaTeX \\(2_\\epsilon\\) bundle. https://komascript.de/~mkohm/scrguien.pdf","code":""},{"path":"https://rnuske.github.io/komaletter/reference/komaletter.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"KOMA-Script LaTeX Letter Format — komaletter","text":"","code":"if (FALSE) { rmarkdown::draft(\"my_letter.Rmd\", template=\"pdf\", package=\"komaletter\") rmarkdown::render(\"my_letter.Rmd\") }"},{"path":"https://rnuske.github.io/komaletter/news/index.html","id":"komaletter-042900","dir":"Changelog","previous_headings":"","what":"komaletter 0.4.2.900","title":"komaletter 0.4.2.900","text":"enable References. bibliography included YAML header citekey used, paragraph reference list gets added end text.","code":""},{"path":"https://rnuske.github.io/komaletter/news/index.html","id":"komaletter-042","dir":"Changelog","previous_headings":"","what":"komaletter 0.4.2","title":"komaletter 0.4.2","text":"CRAN release: 2021-02-02 fixed redirected URL","code":""},{"path":"https://rnuske.github.io/komaletter/news/index.html","id":"komaletter-041","dir":"Changelog","previous_headings":"","what":"komaletter 0.4.1","title":"komaletter 0.4.1","text":"documented YAML-parameter inline-links creating inline hyperlinks rather footnotes default layout signals PDF viewer print document actual size, followed . notes printing README & vignette","code":""},{"path":"https://rnuske.github.io/komaletter/news/index.html","id":"komaletter-04","dir":"Changelog","previous_headings":"","what":"komaletter 0.4","title":"komaletter 0.4","text":"CRAN release: 2020-06-29 default layout now also handles two-line return addresses gracefully added YAML parameter return-short define additional shorter address just return address window enhanced documentation. roxygen documentation now written markdown","code":""},{"path":"https://rnuske.github.io/komaletter/news/index.html","id":"komaletter-032","dir":"Changelog","previous_headings":"","what":"komaletter 0.3.2","title":"komaletter 0.3.2","text":"CRAN release: 2019-12-07 modified pandoc LaTeX template consider tex package ‘grffile’ might available. grffile now legacy package absent TeX Live short time. (thanks @cderv)","code":""},{"path":"https://rnuske.github.io/komaletter/news/index.html","id":"komaletter-031","dir":"Changelog","previous_headings":"","what":"komaletter 0.3.1","title":"komaletter 0.3.1","text":"CRAN release: 2019-08-23 added section intro vignette non-English letters slightly darker header foldmarks default style (maintainersDelight.lco)","code":""},{"path":"https://rnuske.github.io/komaletter/news/index.html","id":"komaletter-03","dir":"Changelog","previous_headings":"","what":"komaletter 0.3","title":"komaletter 0.3","text":"added vignette describing parameterized letters mass mailings reduced mandatory YAML metadata header items ‘output’ (dispensed ‘opening’, ‘address’, ‘author’) introduced continuous integration service Travis CI","code":""},{"path":"https://rnuske.github.io/komaletter/news/index.html","id":"komaletter-02","dir":"Changelog","previous_headings":"","what":"komaletter 0.2","title":"komaletter 0.2","text":"protected path default lco LaTeX file breaking whitespace windows renamed maintainers_delight.lco avoid pandoc problems underscores paths","code":""},{"path":"https://rnuske.github.io/komaletter/news/index.html","id":"komaletter-01","dir":"Changelog","previous_headings":"","what":"komaletter 0.1","title":"komaletter 0.1","text":"intial version based linl version 0.0.2 using KOMA-Script class ‘scrlttr2’ instead LaTeX class ‘letter’","code":""}]
